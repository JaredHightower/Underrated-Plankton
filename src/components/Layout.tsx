import Video from './Video'
import { ChevronRight } from 'tabler-icons-react'
import { Outlet, Link } from 'react-router-dom'
import { motion } from 'framer-motion'
import {
  MouseParallaxContainer,
  MouseParallaxChild,
} from 'react-parallax-mouse'
import {
  Container,
  Title,
  createStyles,
  SimpleGrid,
  Group,
  Center,
  List,
  Anchor,
  Overlay,
} from '@mantine/core'
import useBlobity from 'blobity/lib/useBlobity'

const useStyles = createStyles((theme) => ({
  mainWrapper: {
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    overflow: 'hidden',
    height: '100vh',
  },
  splash: {
    position: 'absolute',
    zIndex: 5,
  },
  plankton: {
    position: 'absolute',
    zIndex: 10,
  },
  container: {
    position: 'relative',
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'center',
    alignItems: 'center',
  },
  contentWrapper: {
    position: 'absolute',
  },
  nav: {
    boarder: '10px solid black',
  },
  titleContainer: {
    display: 'flex',
    flexDirection: 'column',
    position: 'relative',
  },
  title: {
    fontFamily: 'Kollektif',
    fontSize: '30px',
    fontWeight: 400,
    color: '#ffffffcc',
    outlineColor: 'black',
  },

  highlight: {
    fontFamily: 'Rock Salt',
    fontSize: '90px',
    fontWeight: 400,
    color: '#17f7a8',
  },
  svg: {
    position: 'absolute',
  },

  ul: {
    listStyle: 'none',
  },

  grid: {
    backgroundColor: 'white',
    borderRadius: '5px',
  },

  links: {
    fontSize: '25px',
    color: 'gray',
  },
}))

const svgVariants = {
  hidden: { x: -50 },
  visible: {
    x: 0,
    transition: { delay: 4, duration: 1 },
  },
}

const drawPath = {
  hidden: {
    opacity: 0,
    pathLength: 0,
  },
  visible: {
    opacity: 1,
    pathLength: 1,
    transition: {
      delay: 4,
      duration: 1,
      ease: 'easeInOut',
    },
  },
}

const Layout = () => {
  const { classes } = useStyles()
  const options: any = {
    opacity: 0.5,
    dotColor: 'rgb(23, 247, 168)',
    reset: true,
  }
  const blobity: any = useBlobity({
    ...options,
  })
  const routeItems = componentRoutes.map((items) => (
    <List.Item>
      <Center>
        <Anchor component={Link} to={items.href}>
          {items.label}
        </Anchor>
      </Center>
    </List.Item>
  ))
  return (
    <>
      <Video />
      <Overlay opacity={0.6} color='#000' zIndex={-1} />
      <MouseParallaxContainer>
        <MouseParallaxChild factorX={0.005} factorY={0.01}>
          <div className={classes.mainWrapper}>
            <Container className={classes.titleContainer}>
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ duration: 1 }}
                exit={{ opacity: 0 }}
              >
                <Group position='center' spacing='xs'>
                  <span className={classes.title}>UNDERRATED</span>
                </Group>
              </motion.div>
              <Group position='center'>
                <motion.svg
                  initial='hidden'
                  animate='visible'
                  variants={svgVariants}
                  width='265'
                  height='9'
                  viewBox='0 0 265 15'
                  fill='none'
                  xmlns='http://www.w3.org/2000/svg'
                >
                  <motion.path
                    variants={drawPath}
                    d='M5.83382 1.73785C7.90407 1.80511 10.0739 1.84394 12.1452 1.87956C13.0325 1.90839 13.8222 1.90237 14.7094 1.9312C18.4577 1.98963 22.2059 2.04807 25.9541 2.1065C30.491 2.19056 34.9304 2.23977 39.4673 2.32383C45.8794 2.40546 52.2904 2.51873 58.7024 2.60036C60.1822 2.61677 61.661 2.66481 63.1408 2.68122C66.889 2.73965 70.6372 2.79808 74.3844 2.88816C78.1327 2.94659 81.8809 3.00503 85.6281 3.0951C87.1079 3.11151 88.5877 3.12791 90.0664 3.17596C95.9835 3.30486 101.999 3.43696 107.916 3.56587C111.565 3.65274 115.213 3.73961 118.962 3.79805C120.44 3.84609 121.822 3.85929 123.3 3.90734C129.019 4.06148 134.837 4.21882 140.556 4.37296C146.275 4.5271 151.895 4.67804 157.614 4.83218C159.092 4.88023 160.571 4.92827 162.149 4.97952C165.895 5.10124 169.542 5.21976 173.289 5.34148C179.105 5.53047 184.823 5.71625 190.64 5.87359C192.513 5.93445 194.386 5.99531 196.26 6.05617C200.203 6.1843 204.146 6.31242 208.09 6.44055C208.385 6.45016 208.78 6.46297 209.075 6.47258C200.202 6.21594 191.23 5.9561 182.355 5.7311C178.608 5.64102 174.96 5.52251 171.213 5.43243C169.636 5.38118 167.96 5.32673 166.382 5.30712C160.958 5.16259 155.633 5.05291 150.21 4.90838C143.997 4.76986 137.785 4.59971 131.572 4.4612C130.488 4.42596 129.501 4.42557 128.417 4.39034C125.063 4.34472 121.808 4.27066 118.454 4.22504C111.748 4.10215 105.041 3.97927 98.3341 3.85639C97.3483 3.82436 96.3614 3.82397 95.3745 3.82358C92.1192 3.78116 88.7643 3.76719 85.509 3.72477C79.5898 3.65915 73.7693 3.59674 67.8501 3.53113C66.2718 3.51152 64.5938 3.52035 63.0154 3.50074C59.2662 3.47396 55.5169 3.44717 51.7666 3.45202C47.0305 3.42484 42.1958 3.39446 37.4596 3.36728C30.8484 3.34253 24.1385 3.31458 17.5272 3.28983C15.9489 3.27022 14.3695 3.28226 12.6925 3.25945C9.83051 3.26149 6.9685 3.26353 4.10648 3.26557C3.81073 3.25596 3.51293 3.30963 3.50881 3.43621C3.50573 3.53114 3.7984 3.63568 4.09415 3.64529C5.17857 3.68052 6.16338 3.7442 7.2478 3.77943C7.04549 3.93124 6.94382 4.02297 6.94074 4.1179C6.92943 4.46598 7.8064 4.81124 8.9894 4.84968C17.177 4.95732 25.267 5.03012 33.4536 5.16941C40.5547 5.30511 47.6568 5.40916 54.7579 5.54485C62.5502 5.67133 70.441 5.80101 78.2322 5.95913C80.6978 6.00756 83.1634 6.056 85.6301 6.07279C86.3201 6.09521 87.0112 6.08599 87.7999 6.11162C100.422 6.42669 113.045 6.71012 125.666 7.02519C132.372 7.17972 139.176 7.33745 145.881 7.52362C148.347 7.57206 150.713 7.64893 153.178 7.69737C166.095 8.05369 179.011 8.41002 191.928 8.76635C197.45 8.91408 202.971 9.06181 208.493 9.20954C213.226 9.33165 217.958 9.4854 222.692 9.57587C226.637 9.67235 230.483 9.73399 234.428 9.83047C236.4 9.86289 238.372 9.92695 240.246 9.95617C244.686 10.0054 249.125 10.0546 253.564 10.1038C253.264 10.2208 253.258 10.4106 253.353 10.5404C253.446 10.7018 253.738 10.838 254.229 10.9173C254.621 10.9934 255.21 11.0759 255.607 11.0254C256.597 10.9309 257.587 10.8364 258.478 10.7386C258.478 10.7386 258.478 10.7386 258.38 10.7354C258.478 10.7386 258.479 10.707 258.578 10.7102C258.676 10.7134 258.776 10.6849 258.776 10.6849L258.677 10.6817C259.172 10.6345 259.667 10.5872 260.262 10.5115C260.757 10.4642 261.351 10.3885 261.846 10.3412C262.441 10.2655 262.937 10.1866 263.532 10.1109C264.126 10.0352 264.529 9.79484 264.536 9.57334C264.54 9.44676 264.445 9.34863 264.251 9.21565C264.058 9.08267 263.571 8.90844 263.079 8.86078C262.587 8.81312 262.095 8.76546 261.602 8.74944C261.503 8.74624 261.405 8.74304 261.306 8.73983C261.011 8.73022 260.616 8.71741 260.319 8.73944C259.53 8.74546 258.839 8.75468 258.05 8.72906C257.458 8.70984 256.866 8.72227 256.176 8.69984C254.499 8.67703 252.921 8.65743 251.243 8.66626C250.848 8.65345 250.354 8.66907 249.96 8.65626C250.159 8.59938 250.26 8.5393 250.262 8.47601C250.362 8.41593 250.365 8.35264 250.367 8.28935C250.368 8.25771 250.37 8.19442 250.469 8.16598C250.471 8.10269 250.473 8.03941 250.376 8.00456C250.376 8.00456 250.474 8.00776 250.475 7.97612C250.773 7.92244 251.071 7.86877 251.272 7.7486C251.473 7.66007 251.575 7.5367 251.579 7.41013C251.584 7.28356 251.488 7.18542 251.295 7.05244C251.197 7.0176 251.101 6.95111 251.003 6.91626C250.711 6.81172 250.416 6.77047 250.121 6.72921C249.532 6.64671 248.843 6.59264 248.153 6.57022C247.561 6.551 247.068 6.53499 246.477 6.51577C245.688 6.49014 244.899 6.46452 244.111 6.43889C243.026 6.40366 241.843 6.36522 240.759 6.32998C237.801 6.23389 234.844 6.1378 231.886 6.0417C229.126 5.95201 226.267 5.85912 223.507 5.76943C220.944 5.68615 218.479 5.60607 215.916 5.52279C205.762 5.19287 195.705 4.89779 185.55 4.59951C177.958 4.38451 170.366 4.16951 162.775 3.92286C159.423 3.81396 155.972 3.73349 152.619 3.65623C145.026 3.47287 137.434 3.25787 129.841 3.07452C127.672 3.00405 125.502 2.96522 123.333 2.89475C122.052 2.85311 120.868 2.84632 119.586 2.80467C112.091 2.65617 104.595 2.50766 97.0998 2.35915C94.8314 2.31712 92.5629 2.27509 90.1959 2.22986C88.9143 2.18822 87.6317 2.17822 86.349 2.16822C78.8526 2.05136 71.4547 1.93769 63.9582 1.82083C60.1114 1.75919 56.2646 1.69755 52.4167 1.66756C45.8075 1.57952 39.1983 1.49149 32.6866 1.4383C26.9647 1.37909 21.2437 1.28823 15.5228 1.19738C14.6345 1.2002 13.7472 1.17137 12.7604 1.17098C11.2806 1.15458 9.80184 1.10653 8.32205 1.09013C7.03635 1.17506 5.65618 1.13021 4.37459 1.08857C4.28012 0.958797 3.88887 0.851054 3.59209 0.873088C2.70484 0.844259 1.91514 0.850278 1.02686 0.853093C0.631499 0.871924 0.235108 0.922398 0.132412 1.04577C0.0286872 1.20078 0.319298 1.36861 0.712604 1.41307C1.10591 1.45752 1.49922 1.50198 1.89252 1.54643C2.28583 1.59089 2.58158 1.6005 2.97592 1.61331C3.96073 1.67699 4.84798 1.70581 5.83382 1.73785ZM236.553 8.22063C237.736 8.25907 239.017 8.30071 240.2 8.33915C240.296 8.43728 240.491 8.50698 240.686 8.57667C240.193 8.56065 239.699 8.57628 239.305 8.56347C238.417 8.53464 237.529 8.53746 236.642 8.50863C232.697 8.41214 228.851 8.35051 224.906 8.25403C223.131 8.22801 221.355 8.202 219.581 8.14434C216.82 8.05465 213.96 7.99341 211.2 7.90372C204.791 7.72716 198.481 7.5538 192.072 7.37724C179.648 7.03693 167.323 6.69982 154.9 6.35951C146.026 6.10287 137.15 5.90951 128.275 5.71616C114.962 5.41031 101.551 5.06961 88.2385 4.76376C85.5757 4.70892 82.9129 4.65408 80.2491 4.63088C72.654 4.51081 65.06 4.3591 57.4649 4.23903C50.067 4.12537 42.5716 3.97686 35.1737 3.86319C34.4836 3.84077 33.7925 3.84999 33.1024 3.82757C35.0762 3.82835 37.1474 3.86397 39.1212 3.86475C46.1258 3.93395 53.1314 3.97152 60.1359 4.04072C62.6026 4.05751 65.0692 4.07431 67.4373 4.08789C68.7199 4.09789 70.0025 4.10789 71.1855 4.14633C78.5834 4.25999 85.8838 4.33881 93.1831 4.44927C94.5643 4.46247 96.044 4.47887 97.4252 4.49207C99.4965 4.52769 101.568 4.56332 103.539 4.62738C111.035 4.77589 118.53 4.9244 126.026 5.07291C127.703 5.09572 129.379 5.15017 130.957 5.16978C131.351 5.18259 131.844 5.19861 132.239 5.21142C133.422 5.24986 134.605 5.28829 135.69 5.29189C143.185 5.47204 150.776 5.68704 158.271 5.86719C161.722 5.94766 165.174 6.02812 168.624 6.14023C179.765 6.47055 191.005 6.80406 202.146 7.13438C213.779 7.51235 225.215 7.85227 236.553 8.22063Z'
                    fill='white'
                  />
                </motion.svg>
              </Group>
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 2, duration: 1.5 }}
                exit={{ opacity: 0 }}
              >
                <Group position='center' spacing='sm' py={-10}>
                  <Title className={classes.highlight}>Plankton</Title>
                </Group>
              </motion.div>
            </Container>
            {/* <Title className={classes.title}>Underrated Plankton</Title>
        <Title className={classes.title}>Underrated Plankton</Title> */}
            <Group position='center'>
              {/* <nav className={classes.nav}>
            <List className={classes.ul}>
            <SimpleGrid className={classes.grid} cols={4} spacing='xs' py={8}>
            {routeItems}
            </SimpleGrid>
            </List>
          </nav> */}
            </Group>
            <Anchor
              onMouseLeave={blobity.reset}
              className={classes.links}
              component={Link}
              to='/roadmap'
            >
              <Container py={4}>
                <motion.div
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ delay: 2, duration: 1.5 }}
                  exit={{ opacity: 0 }}
                >
                  <Center>
                    <ChevronRight size={48} strokeWidth={2} color={'white'} />
                  </Center>
                </motion.div>
              </Container>
            </Anchor>
            <Outlet />
          </div>
        </MouseParallaxChild>
      </MouseParallaxContainer>
    </>
  )
}

export default Layout

const componentRoutes = [
  { href: '/', label: 'Home' },
  { href: '/roadmap', label: 'Road Map' },
  { href: '/faq', label: 'FAQ' },
  { href: '/mint', label: 'Mint' },
]
